{
  "typescript.tsdk": "node_modules/typescript/lib",

  // Formatting
  "eslint.enable": true,
  "eslint.experimental.useFlatConfig": true,
  "eslint.format.enable": true,
  "eslint.nodePath": "../node_modules/.bin",
  "prettier.configPath": "prettier.config.js",
  "prettier.ignorePath": ".prettierignore",
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit",
    "source.fixAll": "explicit",
    "source.formatDocument": "explicit",
    "source.organizeImports": "explicit"
  },
  "editor.formatOnSave": true,
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "[typescript]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint",
    "editor.formatOnSave": true
  },
  "[vue]": {
    "editor.defaultFormatter": "dbaeumer.vscode-eslint",
    "editor.formatOnSave": true
  },
  // This corresponds to the `lib` we're using everywhere. Setting it here
  // helps to address editor-only type errors in tooling files, where VSCode
  // doesn't pick up the top-level `tsconfig.tools.json`.
  "js/ts.implicitProjectConfig.target": "ES2022",
  "[xml]": {
    "editor.defaultFormatter": "redhat.vscode-xml"
  }
}
