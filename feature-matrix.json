{
  "Question types (basic functionality)": {
    "text": "âœ…",
    "integer": "",
    "decimal": "",
    "note": "ðŸš§",
    "select_one": "âœ…",
    "select_multiple": "âœ…",
    "repeat": "âœ…",
    "group": "âœ…",
    "geopoint": "",
    "geotrace": "",
    "geoshape": "",
    "start-geopoint": "",
    "range": "",
    "image": "",
    "barcode": "",
    "audio": "",
    "background-audio": "",
    "video": "",
    "file": "",
    "date": "",
    "time": "",
    "datetime": "",
    "rank": "",
    "csv-external": "",
    "acknowledge": "",
    "start": "",
    "end": "",
    "today": "",
    "deviceid": "",
    "username": "",
    "phonenumber": "",
    "email": "",
    "audit": ""
  },
  "Appearances": {
    "numbers": "",
    "multiline": "",
    "url": "",
    "ex:": "",
    "thousands-sep": "",
    "bearing": "",
    "vertical": "",
    "no-ticks": "",
    "picker": "",
    "rating": "",
    "new": "",
    "new-front": "",
    "draw": "",
    "annotate": "",
    "signature": "",
    "no-calendar": "",
    "month-year": "",
    "year": "",
    "ethiopian": "",
    "coptic": "",
    "islamic": "",
    "bikram-sambat": "",
    "myanmar": "",
    "persian": "",
    "placement-map": "",
    "maps": "",
    "hide-input": "",
    "minimal": "âœ…",
    "search / autocomplete": "âœ…",
    "quick": "",
    "columns-pack": "",
    "columns": "âœ…",
    "columns-n": "âœ…",
    "no-buttons": "âœ…",
    "image-map": "",
    "likert": "",
    "map": "",
    "field-list": "âœ…",
    "label": "âœ…",
    "list-nolabel": "âœ…",
    "list": "âœ…",
    "table-list": ""
  },
  "Parameters": {
    "randomize": "âœ…",
    "seed": "âœ…",
    "value": "",
    "label": "",
    "geopoint capture-accuracy, warning-accuracy, allow-mock-accuracy": "",
    "range start, end, step": "",
    "image max-pixels": "",
    "audio quality": "",
    "Audit: location-priority, location-min-interval, location-max-age, track-changes, track-changes-reasons, identify-user": ""
  },
  "Form Logic": {
    "calculate": "âœ…",
    "relevant": "âœ…",
    "required": "âœ…",
    "required message": "ðŸš§",
    "custom constraint": "ðŸš§",
    "constraint message": "ðŸš§",
    "read only": "âœ…",
    "trigger": "",
    "choice filter": "âœ…",
    "default": "âœ…",
    "query parameter": "",
    "repeat_count": ""
  },
  "Descriptions and Annotations": {
    "label": "âœ…",
    "hint": "",
    "guidance hint": "",
    "Translations": "âœ…",
    "Translations with field/question value": "",
    "Markdown": "",
    "Inline HTML": "",
    "Form attachments": "",
    "image": "",
    "big-image": "",
    "audio": "",
    "video": "",
    "secondary instance (external choice file)": "",
    "secondary instance (last saved)": "",
    "autoplay": ""
  },
  "Theme and Layouts": {
    "grid": "",
    "pages": "",
    "print": "",
    "logo": "",
    "theme color": "",
    "Submissions": "",
    "preview": "âœ…",
    "send": "",
    "view": "",
    "edit": "",
    "attachments": ""
  },
  "Offline capabilities": {
    "List of projects & forms": "",
    "local persistence (single)": "",
    "save as draft": "",
    "offline entities": "",
    "MBtiles / offline map layers": ""
  },
  "XPath": {
    "operators": "âœ…",
    "predicates": "âœ…",
    "axes": "âœ…",
    "string(* arg)": "âœ…",
    "concat(string arg*|node-set arg*)": "âœ…",
    "join(string separator, node-set nodes*)": "âœ…",
    "substr(string value, number start, number end?)": "âœ…",
    "substring-before(string, string)": "âœ…",
    "substring-after(string, string)": "âœ…",
    "translate(string, string, string)": "âœ…",
    "string-length(string arg)": "âœ…",
    "normalize-space(string arg?)": "âœ…",
    "contains(string haystack, string needle)": "âœ…",
    "starts-with(string haystack, string needle)": "âœ…",
    "ends-with(string haystack, string needle)": "âœ…",
    "uuid(number?)": "âœ…",
    "digest(string src, string algorithm, string encoding?)": "âœ…",
    "pulldata(string instance_id, string desired_element, string query_element, string query)": "",
    "if(boolean condition, * then, * else)": "âœ…",
    "coalesce(string arg1, string arg2)": "âœ…",
    "once(string calc)": "âœ…",
    "true()": "âœ…",
    "false()": "âœ…",
    "boolean(* arg)": "âœ…",
    "boolean-from-string(string arg)": "âœ…",
    "not(boolean arg)": "âœ…",
    "regex(string value, string expression)": "âœ…",
    "checklist(number min, number max, string v*)": "âœ…",
    "weighted-checklist(number min, number max, [string v, string w]*)": "âœ…",
    "number(* arg)": "âœ…",
    "random()": "âœ…",
    "int(number arg)": "âœ…",
    "sum(node-set arg)": "âœ…",
    "max(node-set arg*)": "âœ…",
    "min(node-set arg*)": "âœ…",
    "round(number arg, number decimals?)": "âœ…",
    "pow(number value, number power)": "âœ…",
    "log(number arg)": "âœ…",
    "log10(number arg)": "âœ…",
    "abs(number arg)": "âœ…",
    "sin(number arg)": "âœ…",
    "cos(number arg)": "âœ…",
    "tan(number arg)": "âœ…",
    "asin(number arg)": "âœ…",
    "acos(number arg)": "âœ…",
    "atan(number arg)": "âœ…",
    "atan2(number arg, number arg)": "âœ…",
    "sqrt(number arg)": "âœ…",
    "exp(number arg)": "âœ…",
    "exp10(number arg)": "âœ…",
    "pi()": "âœ…",
    "count(node-set arg)": "âœ…",
    "count-non-empty(node-set arg)": "âœ…",
    "position(node arg?)": "âœ…",
    "instance(string id)": "âœ…",
    "current()": "âœ…",
    "randomize(node-set arg, number seed)": "âœ…",
    "today()": "âœ…",
    "now()": "âœ…",
    "format-date(date value, string format)": "âœ…",
    "format-date-time(dateTime value, string format)": "âœ…",
    "date(* value)": "âœ…",
    "decimal-date-time(dateTime value)": "âœ…",
    "decimal-time(time value)": "âœ…",
    "selected(string list, string value)": "âœ…",
    "selected-at(string list, number index)": "âœ…",
    "count-selected(node node)": "âœ…",
    "jr:choice-name(node node, string value)": "",
    "jr:itext(string id)": "âœ…",
    "indexed-repeat(node-set arg, node-set repeat1, number index1, [node-set repeatN, number indexN]{0,2})": " ",
    "area(node-set ns|geoshape gs)": "âœ…",
    "distance(node-set ns|geoshape gs|geotrace gt|(geopoint|string) arg*)": "âœ…",
    "base64-decode(base64Binary input)": ""
  }
}
